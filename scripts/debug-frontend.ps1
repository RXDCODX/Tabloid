# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å frontend
param(
    [switch]$Verbose = $false
)

Write-Host "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å frontend..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ scoreboard-app
$scoreboardAppPath = "scoreboard-app"
if (-not (Test-Path $scoreboardAppPath)) {
    Write-Host "‚ùå –ü–∞–ø–∫–∞ $scoreboardAppPath –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ –ü–∞–ø–∫–∞ $scoreboardAppPath –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
$packageJsonPath = "$scoreboardAppPath\package.json"
if (-not (Test-Path $packageJsonPath)) {
    Write-Host "‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $scoreboardAppPath" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ package.json –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green

# –ß–∏—Ç–∞–µ–º package.json
try {
    $packageJson = Get-Content $packageJsonPath | ConvertFrom-Json
    Write-Host "üìã –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $($packageJson.version)" -ForegroundColor Cyan
    Write-Host "üìã –ò–º—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $($packageJson.name)" -ForegroundColor Cyan
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ package.json: $_" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js
Write-Host "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js..." -ForegroundColor Cyan
$nodeVersion = node --version 2>$null
if (-not $nodeVersion) {
    Write-Host "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    exit 1
}
Write-Host "‚úÖ Node.js –≤–µ—Ä—Å–∏—è: $nodeVersion" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º npm
Write-Host "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º npm..." -ForegroundColor Cyan
$npmVersion = npm --version 2>$null
if (-not $npmVersion) {
    Write-Host "‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    exit 1
}
Write-Host "‚úÖ npm –≤–µ—Ä—Å–∏—è: $npmVersion" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º node_modules
$nodeModulesPath = "$scoreboardAppPath\node_modules"
if (Test-Path $nodeModulesPath) {
    Write-Host "‚úÖ node_modules –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    if ($Verbose) {
        $nodeModulesSize = (Get-ChildItem $nodeModulesPath -Recurse | Measure-Object -Property Length -Sum).Sum
        $nodeModulesSizeMB = [math]::Round($nodeModulesSize / 1MB, 2)
        Write-Host "üìä –†–∞–∑–º–µ—Ä node_modules: $nodeModulesSizeMB MB" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ö†Ô∏è  node_modules –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å npm install" -ForegroundColor Yellow
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º dist –ø–∞–ø–∫—É
$distPath = "$scoreboardAppPath\dist"
if (Test-Path $distPath) {
    Write-Host "‚úÖ dist –ø–∞–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Green
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ dist
    $distFiles = Get-ChildItem $distPath -Recurse -File
    Write-Host "üìã –§–∞–π–ª—ã –≤ dist:" -ForegroundColor Cyan
    foreach ($file in $distFiles) {
        $relativePath = $file.FullName.Substring((Get-Location).Path.Length + $distPath.Length + 2)
        $sizeKB = [math]::Round($file.Length / 1KB, 1)
        Write-Host "   üìÑ $relativePath ($sizeKB KB)" -ForegroundColor Yellow
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º index.html
    $indexHtmlPath = "$distPath\index.html"
    if (Test-Path $indexHtmlPath) {
        Write-Host "‚úÖ index.html –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
        if ($Verbose) {
            $indexContent = Get-Content $indexHtmlPath -Raw
            if ($indexContent -match "assets/index-[a-zA-Z0-9]+\.js") {
                $jsFile = $matches[0]
                Write-Host "üìã –ù–∞–π–¥–µ–Ω JS —Ñ–∞–π–ª: $jsFile" -ForegroundColor Cyan
                
                $jsFilePath = "$distPath\$jsFile"
                if (Test-Path $jsFilePath) {
                    Write-Host "‚úÖ JS —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $jsFilePath" -ForegroundColor Green
                } else {
                    Write-Host "‚ùå JS —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $jsFilePath" -ForegroundColor Red
                }
            }
        }
    } else {
        Write-Host "‚ùå index.html –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ dist" -ForegroundColor Red
    }
} else {
    Write-Host "‚ö†Ô∏è  dist –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å npm run build" -ForegroundColor Yellow
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º vite.config.ts
$viteConfigPath = "$scoreboardAppPath\vite.config.ts"
if (Test-Path $viteConfigPath) {
    Write-Host "‚úÖ vite.config.ts –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    if ($Verbose) {
        Write-Host "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ vite.config.ts:" -ForegroundColor Cyan
        Get-Content $viteConfigPath | ForEach-Object { Write-Host "   $_" -ForegroundColor Gray }
    }
} else {
    Write-Host "‚ö†Ô∏è  vite.config.ts –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º tsconfig.json
$tsConfigPath = "$scoreboardAppPath\tsconfig.json"
if (Test-Path $tsConfigPath) {
    Write-Host "‚úÖ tsconfig.json –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  tsconfig.json –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
}

Write-Host "üéâ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
Write-Host "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:" -ForegroundColor Cyan
if (-not (Test-Path $nodeModulesPath)) {
    Write-Host "   üì¶ –í—ã–ø–æ–ª–Ω–∏—Ç–µ: cd scoreboard-app && npm install" -ForegroundColor Yellow
}
if (-not (Test-Path $distPath)) {
    Write-Host "   üî® –í—ã–ø–æ–ª–Ω–∏—Ç–µ: cd scoreboard-app && npm run build" -ForegroundColor Yellow
}
if (-not (Test-Path "$distPath\index.html")) {
    Write-Host "   üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±–æ—Ä–∫–∏ –≤ vite.config.ts" -ForegroundColor Yellow
} 